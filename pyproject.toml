[tool]
[tool.poetry]
authors = ["Daisuke Jinno <klvx01@gmail.com>"]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
]
description = "A YAML validation tool"
homepage = "https://github.com/nobu007/YamlGuardian"
license = "MIT"
name = "YamlGuardian"
packages = [
  {include = "YamlGuardian"},
  {include = "yamlguardian"},
  {include = "tests", format = "sdist"},
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
cerberus = "^1.3.4"
fastapi = "^0.104.1"
isort = {version = "^5.13.2", optional = true}
jsonref = "^1.1.0"
jsonschema = "^4.20.0"
mkdocs = {version = "^1.6.1", optional = true}
mkdocs-autorefs = {version = "*", optional = true}
mkdocs-include-markdown-plugin = {version = "^6.2.2", optional = true}
mkdocs-material = {version = "^9.5.36", optional = true}
mkdocs-material-extensions = {version = "^1.3.1", optional = true}
mkdocstrings = {version = "*", optional = true}
mypy = {version = "^1.11.2", optional = true}
pandas = "^2.1.3"
pip = {version = "^25.0", optional = true}
pre-commit = {version = "*", optional = true}
pytest = {version = "^8.3.3", optional = true}
pytest-cov = {version = "^5.0.0", optional = true}
python = ">=3.10,<4.0"
pyyaml = "^6.0.1"
"ruamel.yaml" = "^0.18.10"
ruff = {version = "^0.9.3", optional = true}

[tool.poetry.extras]
test = [
  "black",
  "flake8",
  "flake8-docstrings",
  "isort",
  "ruff",
  "mypy",
  "pytest",
  "pytest-cov",
]

dev = ["pre-commit", "pip"]

doc = [
  "mkdocs",
  "mkdocs-include-markdown-plugin",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocs-material-extensions",
  "mkdocs-autorefs",
]

[tool.poetry.scripts]
YamlGuardian = 'yamlguardian.cli:main'

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 120
skip-string-normalization = false
target-version = ['py310', 'py311', 'py312']

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
multi_line_output = 3
skip_gitignore = true
use_parentheses = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.pylint.messages_control]
disable = ["global-statement", "missing-docstring"]

[tool.flake8]
docstring-convention = "google"
exclude = [
  ".git",
  "__pycache__",
  "setup.py",
  "build",
  "dist",
  "docs",
  "releases",
  ".venv",
  ".tox",
  ".mypy_cache",
  ".pytest_cache",
  ".vscode",
  ".github", # By default test codes will be linted.  # "tests"
]

ignore = ["E203", "E266", "W503"]
max-complexity = 18
max-line-length = 120
per-file-ignores = {"__init__.py" = "F401"}

[tool.mypy]
ignore_missing_imports = true

[tool.coverage.run]
# uncomment the following to omit files during running
# omit = []

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == '__main__':",
  "def main",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
